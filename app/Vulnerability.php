<?php
namespace App;

Class Vulnerability
{

    public function getAllVulnerabilityQuestions()
    {
        // Create Soap Object
        $client =  (new \App\Repositories\VlaSoap)->ws_init();
        
        $questions = json_decode($client->GetAllQuestionsByCategoryIdasJSON( [ 'CategoryId' => 2 ] )->GetAllQuestionsByCategoryIdasJSONResult, true);

        return $questions;
    }

    public function saveVulnerabilityQuestions( $sv_id, $vul_questions ) 
    {
        // Create Soap Object
        $client =  (new \App\Repositories\VlaSoap)->ws_init();
        
        // Current time     
        $date_now = date("Y-m-d");
        $time_now = date("H:i:s");
        $date_time = $date_now . "T" . $time_now;

        $matter_question['CreatedBy'] = auth()->user()->name;     
        $matter_question['UpdatedBy'] = auth()->user()->name;     
        $matter_question['CreatedOn'] = $date_time;       
        $matter_question['UpdatedOn'] = $date_time;    

        foreach ($vul_questions as $vul_question) 
        {	        	
	        // Create call request        
	        $info = [ 'ObjectInstance' =>  [
												'Answer' => true,
												'Operator' => '=',
												'QuestionId' => $vul_question,
												'ServiceId' => $sv_id,
												'ServiceVulAnsId' => 0,
										    ]
	        		];
	        
	        try {
	            $response = $client->SaveOrbitServiceVulAnswer( $info );
	            
	            if( $response->SaveOrbitServiceVulAnswerResult ){
	                return array( 'success' => 'success' , 'message' => 'Vulnerability answers saved.' );
	            } else {
	                return array( 'success' => 'error' , 'message' => 'Ups, something went wrong.' );
	            }
	        }
	        catch (\Exception $e) {            
	            return array( 'success' => 'error' , 'message' =>  $e->getMessage() );      
	        }
        }
    }
}
?>